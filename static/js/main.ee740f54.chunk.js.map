{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/TodoModal/TodoModal.tsx","App.tsx","tools/filter.ts","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","className","TodoFilter","memo","onInputChange","value","query","onDeleteQuery","onFilterChange","onChange","event","target","type","placeholder","style","pointerEvents","onClick","TodoList","todos","onSelectTodo","selectedTodoId","map","id","title","completed","cn","TodoModal","todo","onCancelModal","useState","user","setSelectedUser","useEffect","userId","href","name","App","setTodos","setSelectedTodo","setQuery","filter","setFilter","error","handleClickTodo","useCallback","todoId","useMemo","find","item","visibleTodos","filterOption","replace","toLowerCase","searchingWord","isTitleIncludeQuery","includes","getFilteredTodos","handleCloseModal","handleChangeQuery","handleChangeFilter","handleclearQuery","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee740f54.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { memo } from 'react';\n\ntype Props = {\n  onInputChange: (value: string) => void;\n  query: string;\n  value: string\n  onDeleteQuery: () => void;\n  onFilterChange: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = memo(\n  ({\n    onInputChange,\n    value,\n    query,\n    onDeleteQuery,\n    onFilterChange,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={value}\n              onChange={(event) => onFilterChange(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => onInputChange(event.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={onDeleteQuery}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import cn from 'classnames';\nimport { memo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  onSelectTodo: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = memo(\n  ({ todos, onSelectTodo, selectedTodoId }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(({\n            id,\n            title,\n            completed,\n          }) => (\n            <tr key={id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={cn({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}>\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectTodo(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far ${selectedTodoId === id\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'}`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import {\n  useEffect,\n  memo,\n  useState,\n  FC,\n} from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onCancelModal: () => void;\n};\n\nexport const TodoModal: FC<Props> = memo(\n  ({ todo, onCancelModal }) => {\n    const [user, setSelectedUser] = useState<User | null>(null);\n\n    useEffect(() => {\n      try {\n        getUser(todo.userId)\n          .then(setSelectedUser);\n      } catch {\n        setSelectedUser(null);\n      }\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                onClick={onCancelModal}\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })\n                }>\n                  {todo?.completed\n                    ? 'Done'\n                    : 'Planned'\n                  }\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n","/* eslint-disable max-len */\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { getFilteredTodos } from './tools/filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodo] = useState(0);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    try {\n      getTodos()\n        .then(setTodos);\n    } catch (error) {\n      setTodos([]);\n    }\n  }, []);\n\n  const handleClickTodo = useCallback((todoId: number) => {\n    setSelectedTodo(todoId);\n  }, []);\n\n  const todo = useMemo(() => (\n    todos.find(item => item.id === selectedTodoId)\n  ), [selectedTodoId]);\n\n  const visibleTodos = useMemo(() => {\n    return getFilteredTodos(todos, query, filter);\n  }, [query, todos, filter]);\n\n  const handleCloseModal = useCallback(() => {\n    setSelectedTodo(0);\n  }, []);\n\n  const handleChangeQuery = useCallback((value: string) => {\n    setQuery(value);\n  }, []);\n\n  const handleChangeFilter = useCallback((value: string) => {\n    setFilter(value);\n  }, []);\n\n  const handleclearQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onInputChange={handleChangeQuery}\n                query={query}\n                value={filter}\n                onDeleteQuery={handleclearQuery}\n                onFilterChange={handleChangeFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelectTodo={handleClickTodo}\n                  />\n                )\n\n                : <Loader />\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          onCancelModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  filterOption: string,\n) => {\n  return todos.filter((todo : Todo) => {\n    let filter;\n\n    const title = todo.title\n      .replace(/ /g, '')\n      .toLowerCase();\n    const searchingWord = query\n      .replace(/ /g, '')\n      .toLowerCase();\n\n    const isTitleIncludeQuery = title.includes(searchingWord);\n\n    switch (filterOption) {\n      case 'active':\n        filter = todo.completed === false;\n        break;\n\n      case 'completed':\n        filter = todo.completed === true;\n        break;\n\n      default:\n        filter = true;\n        break;\n    }\n\n    return filter && isTitleIncludeQuery;\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}