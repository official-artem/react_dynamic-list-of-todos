{"version":3,"sources":["components/Loader/Loader.tsx","components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","tools/filter.ts","index.tsx"],"names":["Loader","className","TodoFilter","memo","onChange","value","query","onDeleteQuery","onFilterChange","event","target","type","placeholder","style","pointerEvents","onClick","TodoList","todos","onCLick","selectedTodo","map","id","title","completed","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todo","onCancelModal","useState","user","setSelectedUser","useEffect","userId","person","window","console","log","href","name","App","setTodos","setSelectedTodo","setQuery","filter","setFilter","todosFromAPI","handleClickTodo","useCallback","todoId","find","item","visibleTodos","useMemo","filterOption","replace","toLowerCase","searchingWord","isTitleIncludeQuery","includes","getFilteredTodos","handleChange","handleChangeFilter","handleDeleteQuery","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4e40c49.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { memo } from 'react';\n\ntype Props = {\n  onChange: (value: string) => void;\n  query: string;\n  value: string\n  onDeleteQuery: () => void;\n  onFilterChange: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = memo(\n  ({\n    onChange,\n    value,\n    query,\n    onDeleteQuery,\n    onFilterChange,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={value}\n              onChange={(event) => {\n                onFilterChange(event.target.value);\n              }}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            value={query}\n            onChange={(event) => {\n              onChange(event.target.value);\n            }}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          {query && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={onDeleteQuery}\n              />\n            </span>\n          )}\n        </p>\n      </form>\n    );\n  },\n);\n","import { memo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: number;\n  onCLick: (todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = memo(\n  ({ todos, onCLick, selectedTodo }) => {\n    return (\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {todos.map(({\n            id,\n            title,\n            completed,\n          }) => (\n            <tr key={id} data-cy=\"todo\" className=\"\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'\n                }>\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onCLick(id)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far ${selectedTodo === id\n                      ? 'fa-eye-slash'\n                      : 'fa-eye'}`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  },\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import {\n  useEffect,\n  memo,\n  useState,\n  FC,\n} from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  onCancelModal: () => void;\n};\n\nexport const TodoModal: FC<Props> = memo(\n  ({ todo, onCancelModal }) => {\n    const [user, setSelectedUser] = useState<User | null>(null);\n\n    const handleClickClose = () => {\n      onCancelModal();\n    };\n\n    useEffect(() => {\n      getUser(todo.userId)\n        .then((person) => {\n          setSelectedUser(person);\n\n          window.console.log(person);\n        });\n    }, []);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                onClick={handleClickClose}\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={\n                  todo?.completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'\n                }>\n                  {todo?.completed\n                    ? 'Done'\n                    : 'Planned'\n                  }\n                </strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n","/* eslint-disable max-len */\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { Todo } from './types/Todo';\n\nimport { Loader } from './components/Loader';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { getFilteredTodos } from './tools/filter';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos().then((todosFromAPI => {\n      setTodos(todosFromAPI);\n    }));\n  }, []);\n\n  const handleClickTodo = useCallback((todoId: number) => {\n    setSelectedTodo(todoId);\n  }, []);\n\n  const todo = todos.find(item => item.id === selectedTodo);\n\n  const visibleTodos = useMemo(() => {\n    return getFilteredTodos(todos, query, filter);\n  }, [query, todos, filter]);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(0);\n  };\n\n  const handleChange = useCallback((value: string) => {\n    setQuery(value);\n  }, []);\n\n  const handleChangeFilter = useCallback((value: string) => {\n    setFilter(value);\n  }, []);\n\n  const handleDeleteQuery = useCallback(() => {\n    setQuery('');\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onChange={handleChange}\n                query={query}\n                value={filter}\n                onDeleteQuery={handleDeleteQuery}\n                onFilterChange={handleChangeFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onCLick={handleClickTodo}\n                  />\n                )\n\n                : <Loader />\n              }\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && (\n        <TodoModal\n          todo={todo}\n          onCancelModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  filterOption: string,\n) => {\n  return todos.filter((todo : Todo) => {\n    let filter;\n\n    const title = todo.title\n      .replace(/ /g, '')\n      .toLowerCase();\n    const searchingWord = query\n      .replace(/ /g, '')\n      .toLowerCase();\n\n    const isTitleIncludeQuery = title.includes(searchingWord);\n\n    switch (filterOption) {\n      case 'active':\n        filter = todo.completed === false;\n        break;\n\n      case 'completed':\n        filter = todo.completed === true;\n        break;\n\n      default:\n        filter = true;\n        break;\n    }\n\n    return filter && isTitleIncludeQuery;\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}